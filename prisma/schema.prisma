generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Leads {
    id                         String       @id @db.VarChar(20)
    first_name                 String       @db.VarChar(100)
    last_name                  String?      @db.VarChar(100)
    phone                      String       @db.VarChar(15)
    email                      String?      @unique @db.VarChar(255)
    address                    String?      @db.Text
    area                       String?      @db.VarChar(255)
    walkin_date                DateTime?    @db.Date
    expected_budget            Decimal?     @db.Decimal(10, 2)
    demo_taken                 Boolean?     @default(false)
    color_code                 String?      @db.VarChar(7)
    number_of_contact_attempts Int?         @default(0)
    last_contacted_date        DateTime?    @db.Timestamp(6)
    next_followup              DateTime?    @db.Timestamp(6)
    stage_id                   String?      @db.VarChar(20)
    stage                      Stage?       @relation(fields: [stage_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_stage")
    team_member_id             String?      @db.VarChar(20)
    team_member                TeamMember?  @relation(fields: [team_member_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_team_member")
    instrument_id              String?      @db.VarChar(20)
    instrument                 Instruments? @relation(fields: [instrument_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_instrument")
    source_id                  String?      @db.VarChar(20)
    source                     Sources?     @relation(fields: [source_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_source")
    student                    Student?
    create_date                DateTime?    @default(now()) @db.Timestamp(6)
    updated_date               DateTime?    @default(now()) @updatedAt @db.Timestamp(6)
}

model Sources {
    id          String  @id @db.VarChar(20)
    source      String  @db.VarChar(100)
    description String? @db.VarChar(255)
    leads       Leads[]
}

model Instruments {
    id           String    @id @db.VarChar(20)
    name         String    @unique @db.VarChar(50)
    description  String?   @db.VarChar(255)
    create_date  DateTime? @default(now()) @db.Timestamp(6)
    updated_date DateTime? @default(now()) @updatedAt @db.Timestamp(6)
    leads        Leads[]
    courses      Course[]
}

model Course {
    id            String            @id @db.VarChar(20)
    name          String            @db.VarChar(100)
    difficulty    CourseDifficulty? @default(FOUNDATION)
    description   String?           @db.VarChar(255)
    instrument_id String?           @db.VarChar(20)
    instrument    Instruments?      @relation(fields: [instrument_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_instrument")
    teacher_id    String?           @db.VarChar(20)
    teacher       TeamMember?       @relation(fields: [teacher_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_teacher")
    enrollments   Enrollment[]
}

model Student {
    id                String       @id @default(cuid()) @db.VarChar(20)
    lead_id           String?      @unique @db.VarChar(20)
    lead              Leads?       @relation(fields: [lead_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_lead")
    first_name        String       @db.VarChar(100)
    last_name         String?      @db.VarChar(100)
    parent_first_name String?      @db.VarChar(100)
    parent_last_name  String?      @db.VarChar(100)
    parent_phone      String?      @db.VarChar(15)
    address           String?      @db.Text
    gmaps_place_id    String?      @db.VarChar(255)
    gmaps_url         String?      @db.VarChar(1024)
    gmaps_latitude    Decimal?     @db.Decimal(10, 8)
    gmaps_longitude   Decimal?     @db.Decimal(11, 8)
    dob               DateTime     @db.Date
    gender            String       @db.VarChar(20)
    email             String?      @db.VarChar(100)
    primary_contact   String       @db.VarChar(20)
    secondary_contact String?      @db.VarChar(20)
    intended_subject  String?      @db.VarChar(100)
    learning_goal     String?      @db.VarChar(100)
    enrollments       Enrollment[]
    create_date       DateTime     @default(now()) @db.Timestamp(6)
    updated_date      DateTime     @default(now()) @updatedAt @db.Timestamp(6)
}

model Enrollment {
    id                String   @id @default(cuid()) @db.VarChar(20)
    student_id        String?  @db.VarChar(20)
    student           Student? @relation(fields: [student_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_student")
    plan_code         String?  @db.VarChar(10)
    plan_name         Plans?   @relation(fields: [plan_code], references: [code], onDelete: SetNull, onUpdate: Cascade, map: "fk_plan_name")
    course_id         String?  @db.VarChar(20)
    course            Course?  @relation(fields: [course_id], references: [id], onDelete: SetNull, onUpdate: Cascade, map: "fk_course")
    amount_paid       Int      @db.Integer
    start_date        DateTime @db.Date
    preferred_timings String?  @db.VarChar(50)
    preferred_days    String?  @db.VarChar(50)
    teacher_name      String?  @db.VarChar(100)
    classes_remaining Int      @default(0)
    create_date       DateTime @default(now()) @db.Timestamp(6)
    updated_date      DateTime @default(now()) @updatedAt @db.Timestamp(6)
}

model Plans {
    code       String       @id @db.VarChar(10)
    name       String       @db.VarChar(20)
    price      Int          @db.Integer
    enrollment Enrollment[]
}

model Stage {
    id    String  @id @db.VarChar(20)
    name  String  @unique @db.VarChar(100)
    leads Leads[]
}

model TeamMember {
    id           String         @id @db.VarChar(20)
    first_name   String         @db.VarChar(100)
    last_name    String         @db.VarChar(100)
    email        String?        @unique @db.VarChar(255)
    phone        String         @db.VarChar(15)
    role         TeamMemberRole @default(STAFF)
    active       Boolean?       @default(true)
    create_date  DateTime?      @default(now()) @db.Timestamp(6)
    updated_date DateTime?      @default(now()) @updatedAt @db.Timestamp(6)
    leads        Leads[]
    Course       Course[]
}

enum TeamMemberRole {
    STAFF
    INSTRUCTOR
    ADMIN
    SUPER_ADMIN
}

enum CourseDifficulty {
    FOUNDATION
    BEGINNER
    INTERMEDIATE
    ADVANCED
}
